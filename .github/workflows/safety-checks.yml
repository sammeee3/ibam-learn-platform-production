name: Production Safety Checks

on:
  pull_request:
    branches: [main]
  push:
    branches: [staging]

jobs:
  safety-checks:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: ❌ CRITICAL - Check for pages directory
      run: |
        if [ -d "pages" ]; then
          echo "🚨 FATAL: pages/ directory found! This breaks App Router completely."
          echo "Remove pages/ directory before proceeding."
          exit 1
        else
          echo "✅ No pages/ directory found - App Router safe"
        fi
        
    - name: 🔧 Verify next.config.js exists
      run: |
        if [ -f "next.config.js" ]; then
          echo "✅ next.config.js found"
        else
          echo "⚠️ next.config.js not found - creating default"
          echo "/** @type {import('next').NextConfig} */" > next.config.js
          echo "const nextConfig = {}" >> next.config.js
          echo "module.exports = nextConfig" >> next.config.js
        fi
        
    - name: 🏗️ Build and verify App Router
      run: |
        npm run build
        
    - name: ✅ Verify build output shows App Router
      run: |
        if npm run build 2>&1 | grep -q "Route (app)"; then
          echo "✅ Build shows 'Route (app)' - App Router working correctly"
        else
          echo "🚨 FATAL: Build does not show 'Route (app)' - App Router broken!"
          echo "This usually means pages/ directory exists or Next.js config is wrong."
          exit 1
        fi
        
    - name: 🔍 Check critical authentication files
      run: |
        FILES=(
          "app/api/auth/sso/route.ts"
          "app/dashboard/page.tsx"
          "system-io-UPDATED-button.html"
        )
        
        for file in "${FILES[@]}"; do
          if [ -f "$file" ]; then
            echo "✅ Critical file exists: $file"
          else
            echo "🚨 MISSING critical file: $file"
            exit 1
          fi
        done
        
    - name: 📋 Safety check summary
      run: |
        echo "🎉 All safety checks passed!"
        echo "✅ No pages/ directory conflict"
        echo "✅ App Router build successful"
        echo "✅ Critical authentication files present"
        echo "🚀 Safe to deploy to production"